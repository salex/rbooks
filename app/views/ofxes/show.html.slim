.w3-container.w3-white.min-height
  .w3-row-padding-x
    #ledger.cell[data-controller="ofx"]

      / #id01.w3-modal[data-ofx-target="modal"]
      /   .w3-modal-content.w3-card-4
      /     header.w3-container.w3-teal
      /       span.w3-button.w3-display-topright onclick="document.getElementById('id01').style.display='none'"  &times;
      /       h2 About OFX Bank Transaction
      /     .w3-container
      /       p If your recongnize the Entry as a reapeating Entry, search for a matching name in the following search field and click the Duplicate Match button and it will duplicate a new Entry with the information from the bank statement. You can then save the Entry if it validates. You can also Cancel the Entry if you picked the wrong match.

      /       div.p-4[data-autopickr-url-value="/entries/auto_search" 
      /         data-controller="autopickr"
      /         data-autopickr-slen-value="2"
      /         ]
      /         = render partial:"ofxes/pickr"
      /         div
      /           = check_box_tag('contains','no', false,class:"w3-left", data:{autopickr_target:"contains"},class:'mt-1') 
      /           span.ml-3.align-top Use Contains Search


      /       / div[
      /       /   data-autopickr-url-value="//entries/autocomplete_search"
      /       /   data-autopickr-slen-value="1"
      /       /   data-controller="autopickr"
      /       /   class='greenBox z-10 px-2'
      /       /   ]
      /       /   div
      /       /     = text_field_tag(:input,nil,
      /       /       data:{autopickr_target:"input", action:"autopickr#search"},
      /       /       placeholder:"Search...",class:"w-48",autofocus:true)
      /       /     span = link_to('Pick',nil,data:{autopickr_target:"button"}, class:"bg-blue-500 hover:bg-blue-700 text-white font-bold mx-2 py px-2 rounded inline-block hidden")

      /       /   div = hidden_field_tag('selected_id',nil,
      /       /     data:{autopickr_target:"hidden",action:"change->autopickr#selected"})
      /       /   ul.z-20.text-black.bg-white.max-h-52.divide-y.divide-fuchsia-300.overflow-scroll[data-autopickr-target="results"] 

      /     /   div.w3-left[
      /     /     data-controller="autocomplete" 
      /     /     data-autocomplete-url="/entries/autocomplete_search" 
      /     /     data-autocomplete-min-length="2"
      /     /     ]
      /     /     input[type="text" 
      /     /       data-autocomplete-target="input" 
      /     /       placeholder="Entry Description Search" 
      /     /       data-action="change->ofx#showSearched" 
      /     /       style="width:300px;margin-right:8px;"]
      /     /     input[type="hidden" name="entry_id" 
      /     /       data-autocomplete-target="hidden" 
      /     /       data-ofx-target="hidden" ]
      /     /     input[type="hidden" name="fit_id" data-ofx-target="fitID" ]


      /     /     .w3-right.lime-link-button.w3-hide[
      /     /     data-ofx-target="showButton" 
      /     /     data-action="click->ofx#dupSearched" 
      /     /     data-entryID="" data-fitID=""] Duplicate Match
      /     /     ul.w3-ul.w3-border[data-autocomplete-target="results"]
      /     / / div.my-4.ml-4
      /     / /   = check_box_tag('contains','no', false,class:"w3-left", data:{autopickr_target:"contains"},class:'mt-1') 
      /     / /   span.ml-3.align-top Use Contains Search

      /     footer.w3-container.w3-teal.mt-8
      /       p Modal Footer




      button = link_to 'List All',ofxes_path, class:'blue-link-button'
      table.classic[data-controller="sortTable"]
        - @ofx.update_data(true)
        - balance = @ofx.hash_data[:balance]
        - bbalance = @ofx.hash_data[:beginning_balance] ||= 0

        - posted_date = @ofx.statement_date
        caption = "Bank Balances - Begining: #{to_money bbalance} | Ending:#{to_money balance} -  Posted on: #{posted_date}"
        thead#sort_header
          tr
            th.strong.w-28[data-action="click->sortTable#sortBy"]
              i.fas.fa-sort
              |Date
            th.strong[data-action="click->sortTable#sortBy"]
              i.fas.fa-sort
              |Numb
            th.strong.w25[data-action="click->sortTable#sortBy"]
              i.fas.fa-sort
              |Memo
            th.strong[data-action="click->sortTable#sortBy"] 
              i.fas.fa-sort
              |FitId
            td.strong.w25 Entry
            th.strong[data-action="click->sortTable#sortBy"] 
              i.fas.fa-sort
              |Amount
            td.strong Balance
        
        tbody id="entrys"
          -rbal = balance 
          / + @account.transactions.last.amount_in_pennies
          -@account.transactions.each do |bt|
            / - entry = bt.entry
            / - bt.check_number = '' if bt.check_number >'8999'
            tr
              td = bt.posted_at.to_date
              td = bt.check_number
              td = bt.memo
              td = bt.fit_id
              / = entry.description if entry.present?
              - if bt.ref_number.present?
                - entry = Entry.find(bt.ref_number)
                td = link_to "#{entry.id} - #{entry.description}", entry_path(entry)
              - else
                - if bt.payee.present?
                  td
                    |Possible Link(s)&nbsp;
                    - bt.payee[bt.fit_id].each do |e|
                      button[class="blue-link"]
                        = link_to "#{e[:enumb]} #{e[:description][0..19]} -#{e[:post_date]}",link_ofx_path(bt.fit_id, entry:e[:entry_id])
                -else
                  td 
                    / - params ={amount:bt.amount_in_pennies,date:bt.posted_at.to_date,description:bt.name,memo:bt.memo,numb:bt.check_number}
                    = link_to( "NewEntry", new_entry_ofx_path(id:bt.fit_id,amount:bt.amount_in_pennies,date:bt.posted_at.to_date,description:bt.name,memo:bt.memo,numb:bt.check_number,type_tran:bt.type),class:"lime-link-button")
                    / button.lime-link-button[data-action="click->ofx#openModal" data-fitid="#{bt.fit_id}"] Search Entries
                    span[ data-controller="toggleMenu"]
                      button[class="#{btnGreen}" data-action="click->toggleMenu#toggleMenu"] Search Entries
                      div[class="z-10 absolute bg-green-200 w-1/3 px-2 hidden" data-toggleMenu-target="menu"]
                        div.p-4[data-autopickr-url-value="/entries/auto_search" 
                          data-controller="autopickr"
                          data-autopickr-slen-value="2"
                          data-autopickr-refid-value="#{bt.fit_id}"
                          ]
                          = render partial:"ofxes/pickr"
                          div
                            = check_box_tag('contains','no', false,class:"w3-left mt-1", data:{autopickr_target:"contains"}) 
                            span.ml-3.align-top Use Contains Search



              td.tright = to_money(bt.amount_in_pennies)

              td.tright = to_money rbal
            - rbal -= bt.amount_in_pennies
          tr
            td.tright.strong[colspan="6"] Beginning Balance
            td.tright = to_money bbalance

  
